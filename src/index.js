/**
 * Passio Food Catalog API
 * Welcome to the [Passiolife](https://www.passiolife.com) Food Catalog API.  The Passiolife Catalog API is organized around the [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer)  methodology, and it uses resource-oriented URLs, and common HTTP response codes to indicate API errors.  All requests are authenticated using an `api-key` which can be obtained by signing up.  
 *
 * OpenAPI spec version: 0.2-beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ClassifyRequest', 'model/ClassifyResponse', 'model/EndpointError', 'model/FeedbackRequest', 'model/Label', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ClassifyRequest'), require('./model/ClassifyResponse'), require('./model/EndpointError'), require('./model/FeedbackRequest'), require('./model/Label'), require('./api/DefaultApi'));
  }
}(function(ApiClient, ClassifyRequest, ClassifyResponse, EndpointError, FeedbackRequest, Label, DefaultApi) {
  'use strict';

  /**
   * Welcome_to_the__Passiolife_httpswww_passiolife_com_Food_Catalog_API_The_Passiolife_Catalog_API_is_organized_around_the__REST_httpen_wikipedia_orgwikiRepresentational_State_Transfer_methodology_and_it_uses_resource_oriented_URLs_and_common_HTTP_response_codes_to_indicate_API_errors__All_requests_are_authenticated_using_an_api_key_which_can_be_obtained_by_signing_up__.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var PassioFoodCatalog = require('index'); // See note below*.
   * var xxxSvc = new PassioFoodCatalog.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new PassioFoodCatalog.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new PassioFoodCatalog.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new PassioFoodCatalog.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.2-beta
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ClassifyRequest model constructor.
     * @property {module:model/ClassifyRequest}
     */
    ClassifyRequest: ClassifyRequest,
    /**
     * The ClassifyResponse model constructor.
     * @property {module:model/ClassifyResponse}
     */
    ClassifyResponse: ClassifyResponse,
    /**
     * The EndpointError model constructor.
     * @property {module:model/EndpointError}
     */
    EndpointError: EndpointError,
    /**
     * The FeedbackRequest model constructor.
     * @property {module:model/FeedbackRequest}
     */
    FeedbackRequest: FeedbackRequest,
    /**
     * The Label model constructor.
     * @property {module:model/Label}
     */
    Label: Label,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
